=begin
#iDroit Dashboard Admin API

#     これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   

OpenAPI spec version: 0.9.2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

module SwaggerClient
  class DidInfosApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # DID情報へのラベル追加
    # リクエストパラメータのidで指定された単一のDID情報に対して、任意の管理用ラベルを追加します。
    # @param body 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [DidInfoResponseDto]
    def did_infos_controller_add_label(body, id, opts = {})
      data, _status_code, _headers = did_infos_controller_add_label_with_http_info(body, id, opts)
      data
    end

    # DID情報へのラベル追加
    # リクエストパラメータのidで指定された単一のDID情報に対して、任意の管理用ラベルを追加します。
    # @param body 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(DidInfoResponseDto, Integer, Hash)>] DidInfoResponseDto data, response status code and response headers
    def did_infos_controller_add_label_with_http_info(body, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_add_label ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DidInfosApi.did_infos_controller_add_label"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling DidInfosApi.did_infos_controller_add_label"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'DidInfoResponseDto' 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_add_label\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # DID情報へのクライアントアカウント紐付け
    # DID情報の所有者、関係者などの管理者としてクライアントアカウントを紐付けます。
    # @param id 
    # @param user_id 
    # @param [Hash] opts the optional parameters
    # @return [DidInfoResponseDto]
    def did_infos_controller_connect_user(id, user_id, opts = {})
      data, _status_code, _headers = did_infos_controller_connect_user_with_http_info(id, user_id, opts)
      data
    end

    # DID情報へのクライアントアカウント紐付け
    # DID情報の所有者、関係者などの管理者としてクライアントアカウントを紐付けます。
    # @param id 
    # @param user_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(DidInfoResponseDto, Integer, Hash)>] DidInfoResponseDto data, response status code and response headers
    def did_infos_controller_connect_user_with_http_info(id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_connect_user ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling DidInfosApi.did_infos_controller_connect_user"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DidInfosApi.did_infos_controller_connect_user"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/{id}/user/{user_id}'.sub('{' + 'id' + '}', id.to_s).sub('{' + 'user_id' + '}', user_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'DidInfoResponseDto' 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_connect_user\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # 新規DID生成
    # 新規DIDを生成します。
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def did_infos_controller_create(body, opts = {})
      did_infos_controller_create_with_http_info(body, opts)
      nil
    end

    # 新規DID生成
    # 新規DIDを生成します。
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def did_infos_controller_create_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_create ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DidInfosApi.did_infos_controller_create"
      end
      # resource path
      local_var_path = '/api/v1/did-infos'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # DID情報のクライアントアカウント紐付け解除
    # DID情報に紐付いたクライアントアカウントの紐付けを解除します。
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def did_infos_controller_disconnect_user(id, opts = {})
      did_infos_controller_disconnect_user_with_http_info(id, opts)
      nil
    end

    # DID情報のクライアントアカウント紐付け解除
    # DID情報に紐付いたクライアントアカウントの紐付けを解除します。
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def did_infos_controller_disconnect_user_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_disconnect_user ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling DidInfosApi.did_infos_controller_disconnect_user"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/{id}/user'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_disconnect_user\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # DID情報一覧取得
    # アプリケーションが管理するDID情報を一覧として値を返します。
    # @param [Hash] opts the optional parameters
    # @option opts [BigDecimal] :page (必須) ページネーションを表示する際のページ数に当たるクエリパラメーター。全件取得する際は1を指定。(デフォルト: 1)
    # @option opts [BigDecimal] :limit (必須) ページネーションを表示する際のページ数あたりに表示する件数を指定するクエリパラメーター。全件取得する際は0を指定。(デフォルト: 10)
    # @option opts [String] :did (任意) 例: \&quot;did:key:z6MkhGeGj7u5htkCYjE4PaQ8HUqjYyTmxpDb6Q1MqUpUDsN7\&quot;
    # @option opts [String] :manage_uuid (任意) 例: \&quot;32bad62a-4186-4d04-a26a-fcee79d5824b\&quot;
    # @option opts [String] :label (任意) 例: \&quot;did-for-project1\&quot;
    # @option opts [String] :method (任意) 例: \&quot;did:key
    # @option opts [BOOLEAN] :exist_private_key (任意) 例: true
    # @option opts [String] :description (任意) 
    # @option opts [String] :domain_name (任意) 例: \&quot;did:web:idroit-dashboard.com\&quot;
    # @return [DidInfosResponseDto]
    def did_infos_controller_find_all(opts = {})
      data, _status_code, _headers = did_infos_controller_find_all_with_http_info(opts)
      data
    end

    # DID情報一覧取得
    # アプリケーションが管理するDID情報を一覧として値を返します。
    # @param [Hash] opts the optional parameters
    # @option opts [BigDecimal] :page (必須) ページネーションを表示する際のページ数に当たるクエリパラメーター。全件取得する際は1を指定。(デフォルト: 1)
    # @option opts [BigDecimal] :limit (必須) ページネーションを表示する際のページ数あたりに表示する件数を指定するクエリパラメーター。全件取得する際は0を指定。(デフォルト: 10)
    # @option opts [String] :did (任意) 例: \&quot;did:key:z6MkhGeGj7u5htkCYjE4PaQ8HUqjYyTmxpDb6Q1MqUpUDsN7\&quot;
    # @option opts [String] :manage_uuid (任意) 例: \&quot;32bad62a-4186-4d04-a26a-fcee79d5824b\&quot;
    # @option opts [String] :label (任意) 例: \&quot;did-for-project1\&quot;
    # @option opts [String] :method (任意) 例: \&quot;did:key
    # @option opts [BOOLEAN] :exist_private_key (任意) 例: true
    # @option opts [String] :description (任意) 
    # @option opts [String] :domain_name (任意) 例: \&quot;did:web:idroit-dashboard.com\&quot;
    # @return [Array<(DidInfosResponseDto, Integer, Hash)>] DidInfosResponseDto data, response status code and response headers
    def did_infos_controller_find_all_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_find_all ...'
      end
      if @api_client.config.client_side_validation && opts[:'method'] && !['key', 'web', 'ethr', 'ethr:arbitrum:goerli', 'ethr:sepolia'].include?(opts[:'method'])
        fail ArgumentError, 'invalid value for "method", must be one of key, web, ethr, ethr:arbitrum:goerli, ethr:sepolia'
      end
      # resource path
      local_var_path = '/api/v1/did-infos'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'did'] = opts[:'did'] if !opts[:'did'].nil?
      query_params[:'manageUuid'] = opts[:'manage_uuid'] if !opts[:'manage_uuid'].nil?
      query_params[:'label'] = opts[:'label'] if !opts[:'label'].nil?
      query_params[:'method'] = opts[:'method'] if !opts[:'method'].nil?
      query_params[:'existPrivateKey'] = opts[:'exist_private_key'] if !opts[:'exist_private_key'].nil?
      query_params[:'description'] = opts[:'description'] if !opts[:'description'].nil?
      query_params[:'domainName'] = opts[:'domain_name'] if !opts[:'domain_name'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'DidInfosResponseDto' 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_find_all\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # DID情報詳細取得
    # リクエストパラメータのidで指定された単一のDID情報の詳細情報の値を返します。
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [DidInfoResponseDto]
    def did_infos_controller_find_one(id, opts = {})
      data, _status_code, _headers = did_infos_controller_find_one_with_http_info(id, opts)
      data
    end

    # DID情報詳細取得
    # リクエストパラメータのidで指定された単一のDID情報の詳細情報の値を返します。
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(DidInfoResponseDto, Integer, Hash)>] DidInfoResponseDto data, response status code and response headers
    def did_infos_controller_find_one_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_find_one ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling DidInfosApi.did_infos_controller_find_one"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'DidInfoResponseDto' 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_find_one\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # 既存DID登録
    # 外部で生成されたDIDを本アプリケーションに取り込みます。
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def did_infos_controller_register(body, opts = {})
      did_infos_controller_register_with_http_info(body, opts)
      nil
    end

    # 既存DID登録
    # 外部で生成されたDIDを本アプリケーションに取り込みます。
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def did_infos_controller_register_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_register ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DidInfosApi.did_infos_controller_register"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/register'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_register\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # DID情報削除
    # リクエストパラメータのidで指定された単一のDID情報を削除します。
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def did_infos_controller_remove(id, opts = {})
      did_infos_controller_remove_with_http_info(id, opts)
      nil
    end

    # DID情報削除
    # リクエストパラメータのidで指定された単一のDID情報を削除します。
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def did_infos_controller_remove_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_remove ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling DidInfosApi.did_infos_controller_remove"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_remove\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # DID解決
    # DIDを解決した結果であるDID Documentの値を返します。このAPIでは保存などの処理を行いません。生成済みのDIDを保存したい場合、既存DID登録API(/did-infos/register)にリクエストを送信してください。
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ResolveDidResponseDto]
    def did_infos_controller_resolve(body, opts = {})
      data, _status_code, _headers = did_infos_controller_resolve_with_http_info(body, opts)
      data
    end

    # DID解決
    # DIDを解決した結果であるDID Documentの値を返します。このAPIでは保存などの処理を行いません。生成済みのDIDを保存したい場合、既存DID登録API(/did-infos/register)にリクエストを送信してください。
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ResolveDidResponseDto, Integer, Hash)>] ResolveDidResponseDto data, response status code and response headers
    def did_infos_controller_resolve_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidInfosApi.did_infos_controller_resolve ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DidInfosApi.did_infos_controller_resolve"
      end
      # resource path
      local_var_path = '/api/v1/did-infos/resolver'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ResolveDidResponseDto' 

      auth_names = opts[:auth_names] || ['bearer']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidInfosApi#did_infos_controller_resolve\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
