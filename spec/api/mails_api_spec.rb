=begin
#iDroit Dashboard Admin API

#     これは[株式会社フォアー](https://www.fore-co.ltd/ja/)が開発するを使ったDecentralizd Identifiers / Verifiable Credentials(DID/VC)に関係する機能を簡単に利用するための REST API です。現在以下のユースケースをサポートしています。これは今後も拡張されていきます。     - DIDの生成:      - グループ管理機能       - (企業/プロジェクトのまとまり)ごとにユーザー、クライアント、証明書(VC)スキーマを紐付けて管理する。          詳細は以下を参照してください。     - [idroit dashboard admin UI](https://admin.idroit-dashboard.com)     - [idroit dashboard公式ホームページ]()     - [idroit dashboard操作マニュアル]()      以下は関連リンクです。     - [Universal Resolver](https://dev.uniresolver.io/)     - [W3C DID Core 1.0](https://www.w3.org/TR/did-core/)     - [Verifiable Credentials Data Model v2.0](https://www.w3.org/TR/vc-data-model-2.0/)   

OpenAPI spec version: 0.9.2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MailsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MailsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MailsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MailsApi' do
    it 'should create an instance of MailsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::MailsApi)
    end
  end

  # unit tests for mails_controller_find_all
  # 送信済みメール一覧取得
  # 送信済みメールを一覧として値を返します。
  # @param [Hash] opts the optional parameters
  # @option opts [BigDecimal] :page (必須) ページネーションを表示する際のページ数に当たるクエリパラメーター。全件取得する際は1を指定。(デフォルト: 1)
  # @option opts [BigDecimal] :limit (必須) ページネーションを表示する際のページ数あたりに表示する件数を指定するクエリパラメーター。全件取得する際は0を指定。(デフォルト: 10)
  # @return [MailsResponseDto]
  describe 'mails_controller_find_all test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mails_controller_find_one
  # 送信済みメール詳細取得
  # リクエストパラメータのidで指定された単一の送信済みメールの詳細情報の値を返します。
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Mail]
  describe 'mails_controller_find_one test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mails_controller_send
  # 新規単一メール送信
  # 新規単一メールを作成し、送信します。
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'mails_controller_send test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mails_controller_send_batch
  # 新規複数メールバッチ送信
  # 新規メールを複数作成し、送信します。
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'mails_controller_send_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
